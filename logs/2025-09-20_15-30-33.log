2025-09-20 15:30:34,790 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 15:30:35,135 - INFO - __main__ - Logging system initialized successfully
2025-09-20 15:30:35,135 - INFO - __main__ - Starting AI-Enhanced Machine Learning Pipeline
2025-09-20 15:30:35,135 - INFO - __main__ - Starting real data processing from data/ directory
2025-09-20 15:30:35,136 - INFO - __main__ - Found 5 data files: ['mitdb_ecg_sample.csv', 'X.npy', 'y.npy', 'mitdb_ecg_data.npz', 'mitdb_metadata.json']
2025-09-20 15:30:35,136 - INFO - __main__ - Found NPY files, prioritizing them over CSV
2025-09-20 15:30:35,137 - INFO - __main__ - Attempting to load: X.npy
2025-09-20 15:30:35,267 - INFO - __main__ - Successfully loaded NPY data: X(62352, 1000, 2), y(62352,)
2025-09-20 15:30:35,358 - INFO - __main__ - Data loaded successfully: X.npy + y.npy, shape: (62352, 1000, 2), device: cuda
2025-09-20 15:30:35,358 - INFO - __main__ - Starting AI-enhanced data processing with new pipeline flow...
2025-09-20 15:30:35,359 - INFO - __main__ - Starting AI-enhanced training (single attempt, fail fast)
2025-09-20 15:30:35,359 - INFO - __main__ - Flow: Code Generation ‚Üí BO ‚Üí Evaluation
2025-09-20 15:30:35,360 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 15:30:35,360 - INFO - __main__ - Data profile: {'data_type': 'torch_tensor', 'shape': (62352, 1000, 2), 'dtype': 'float32', 'feature_count': 2, 'sample_count': 62352, 'is_sequence': True, 'is_image': False, 'is_tabular': False, 'has_labels': True, 'label_count': 5, 'sequence_lengths': None, 'channels': None, 'height': None, 'width': None, 'metadata': {}}
2025-09-20 15:30:35,360 - INFO - evaluation.code_generation_pipeline_orchestrator - Code generation pipeline orchestrator initialized (no retry logic)
2025-09-20 15:30:35,360 - INFO - evaluation.code_generation_pipeline_orchestrator - Starting code generation pipeline execution (single attempt, fail fast)
2025-09-20 15:30:35,360 - INFO - evaluation.code_generation_pipeline_orchestrator - Flow: AI Code Generation ‚Üí JSON Storage ‚Üí BO ‚Üí Training Execution ‚Üí Evaluation
2025-09-20 15:30:35,360 - INFO - evaluation.code_generation_pipeline_orchestrator - Creating centralized data splits to prevent data leakage
2025-09-20 15:30:35,360 - INFO - data_splitting - Creating centralized data splits with test_size=0.2, val_size=0.2
2025-09-20 15:30:35,360 - INFO - data_splitting - Input data shape: X=(62352, 1000, 2), y=(62352,)
2025-09-20 15:30:35,360 - INFO - data_splitting - Class distribution: [44897  9551  1201  1239  5464]
2025-09-20 15:30:35,576 - INFO - data_splitting - Computed class weights: {np.int64(0): np.float64(0.27775728256708315), np.int64(1): np.float64(1.3057591623036648), np.int64(2): np.float64(10.37815344603381), np.int64(3): np.float64(10.0640605296343), np.int64(4): np.float64(2.282184729768373)}
2025-09-20 15:30:35,577 - INFO - class_balancing - Class imbalance analysis:
2025-09-20 15:30:35,577 - INFO - class_balancing -   Strategy: severe_imbalance
2025-09-20 15:30:35,577 - INFO - class_balancing -   Imbalance ratio: 37.36
2025-09-20 15:30:35,577 - INFO - class_balancing -   Recommendations: Use weighted loss + weighted sampling, Consider Focal Loss, Evaluate with balanced metrics
2025-09-20 15:30:35,577 - INFO - data_splitting - Final splits - Train: 39904, Val: 9977, Test: 12471
2025-09-20 15:30:35,577 - INFO - data_splitting - Train class distribution: [28733  6112   769   793  3497]
2025-09-20 15:30:35,577 - INFO - data_splitting - Val class distribution: [7184 1529  192  198  874]
2025-09-20 15:30:35,577 - INFO - data_splitting - Test class distribution: [8980 1910  240  248 1093]
2025-09-20 15:30:35,577 - INFO - data_splitting - Recommended balancing strategy: severe_imbalance
2025-09-20 15:30:36,324 - INFO - data_splitting - Computed standardization stats - mean shape: torch.Size([1, 2]), std shape: torch.Size([1, 2])
2025-09-20 15:30:36,333 - INFO - evaluation.code_generation_pipeline_orchestrator - Computed standardization statistics from training data only
2025-09-20 15:30:36,333 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-20 15:30:36,333 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE EXECUTION (SINGLE ATTEMPT)
2025-09-20 15:30:36,333 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-20 15:30:36,333 - INFO - evaluation.code_generation_pipeline_orchestrator - ü§ñ STEP 1: AI Training Code Generation
2025-09-20 15:30:36,333 - INFO - _models.ai_code_generator - Conducting literature review before code generation...
2025-09-20 15:32:46,735 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-20 15:32:46,846 - INFO - _models.ai_code_generator - Making API call to gpt-5
2025-09-20 15:32:46,846 - INFO - _models.ai_code_generator - Prompt length: 3143 characters
2025-09-20 15:32:46,846 - INFO - _models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-20 15:32:46,846 - INFO - _models.ai_code_generator - Calling self.client.responses.create...
2025-09-20 15:32:46,846 - INFO - _models.ai_code_generator - Model parameter: gpt-5
2025-09-20 15:34:18,805 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-20 15:34:18,855 - INFO - _models.ai_code_generator - Successfully extracted response content
2025-09-20 15:34:18,855 - INFO - _models.ai_code_generator - AI generated training function: CATNet1D-CNNTransformer-PTQ
2025-09-20 15:34:18,855 - INFO - _models.ai_code_generator - Confidence: 0.90
2025-09-20 15:34:18,855 - INFO - _models.ai_code_generator - Literature review informed code generation (confidence: 0.78)
2025-09-20 15:34:18,855 - INFO - evaluation.code_generation_pipeline_orchestrator - Generated training function: CATNet1D-CNNTransformer-PTQ
2025-09-20 15:34:18,855 - INFO - evaluation.code_generation_pipeline_orchestrator - BO parameters: ['lr', 'batch_size', 'epochs', 'weight_decay', 'dropout', 'stem_channels', 'dw_kernel_size', 'cnn_width_mult', 'd_model', 'nhead', 'num_transformer_layers', 'dim_feedforward', 'optimizer', 'scheduler', 'warmup_epochs', 'use_focal_loss', 'focal_gamma', 'label_smoothing', 'grad_clip', 'quantization_bits', 'quantize_weights', 'quantize_activations', 'calibration_batches', 'quant_backend']
2025-09-20 15:34:18,855 - INFO - evaluation.code_generation_pipeline_orchestrator - Confidence: 0.90
2025-09-20 15:34:18,858 - INFO - evaluation.code_generation_pipeline_orchestrator - üíæ STEP 2: Save Training Function to JSON
2025-09-20 15:34:18,860 - INFO - _models.ai_code_generator - Training function saved to: generated_training_functions\training_function_torch_tensor_CATNet1D-CNNTransformer-PTQ_1758400458.json
2025-09-20 15:34:18,860 - INFO - evaluation.code_generation_pipeline_orchestrator - Training function saved to: generated_training_functions\training_function_torch_tensor_CATNet1D-CNNTransformer-PTQ_1758400458.json
2025-09-20 15:34:18,860 - INFO - evaluation.code_generation_pipeline_orchestrator - üîç STEP 3: Bayesian Optimization
2025-09-20 15:34:18,860 - INFO - evaluation.code_generation_pipeline_orchestrator - Running BO for generated training function: CATNet1D-CNNTransformer-PTQ
2025-09-20 15:34:18,860 - INFO - evaluation.code_generation_pipeline_orchestrator - üì¶ Installing dependencies for GPT-generated training code...
2025-09-20 15:34:18,862 - INFO - package_installer - üîç Analyzing GPT-generated code for package dependencies...
2025-09-20 15:34:18,868 - INFO - package_installer - Extracted imports from code: {'torch'}
2025-09-20 15:34:18,869 - INFO - package_installer - Available packages: {'torch'}
2025-09-20 15:34:18,869 - INFO - package_installer - Missing packages: set()
2025-09-20 15:34:18,869 - INFO - package_installer - ‚úÖ All required packages are already available
2025-09-20 15:34:18,869 - INFO - evaluation.code_generation_pipeline_orchestrator - ‚úÖ All dependencies installed successfully
2025-09-20 15:34:18,957 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 15:34:18,957 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 15:34:18,957 - INFO - evaluation.code_generation_pipeline_orchestrator - BO dataset size: 5000 samples (using bo_sample_num=5000)
2025-09-20 15:34:18,957 - INFO - evaluation.code_generation_pipeline_orchestrator - BO will optimize: ['lr', 'batch_size', 'epochs', 'weight_decay', 'dropout', 'stem_channels', 'dw_kernel_size', 'cnn_width_mult', 'd_model', 'nhead', 'num_transformer_layers', 'dim_feedforward', 'optimizer', 'scheduler', 'warmup_epochs', 'use_focal_loss', 'focal_gamma', 'label_smoothing', 'grad_clip', 'quantization_bits', 'quantize_weights', 'quantize_activations', 'calibration_batches', 'quant_backend']
2025-09-20 15:34:18,957 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 15:34:19,045 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 15:34:19,045 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 15:34:19,045 - INFO - _models.training_function_executor - Using BO subset for optimization: 5000 samples (bo_sample_num=5000)
2025-09-20 15:34:19,056 - INFO - _models.training_function_executor - BO splits - Train: 4000, Val: 1000
2025-09-20 15:34:19,392 - INFO - bo.run_bo - Converted GPT search space: 24 parameters
2025-09-20 15:34:19,392 - INFO - bo.run_bo - Using GPT-generated search space
2025-09-20 15:34:19,393 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-20 15:34:19,395 - INFO - bo.run_bo - üîçBO Trial 1: Initial random exploration
2025-09-20 15:34:19,395 - INFO - bo.run_bo - [PROFILE] suggest() took 0.002s
2025-09-20 15:34:19,395 - INFO - _models.training_function_executor - Using device: cuda
2025-09-20 15:34:19,395 - INFO - _models.training_function_executor - Executing training function: CATNet1D-CNNTransformer-PTQ
2025-09-20 15:34:19,395 - INFO - _models.training_function_executor - Hyperparameters: {'lr': 0.002452612631133679, 'batch_size': 32, 'epochs': 76, 'weight_decay': 0.0002481040974867812, 'dropout': 0.07800932022121827, 'stem_channels': 26, 'dw_kernel_size': 9, 'cnn_width_mult': 0.5871254182522992, 'd_model': 119, 'nhead': 4, 'num_transformer_layers': 3, 'dim_feedforward': 213, 'optimizer': 'adamw', 'scheduler': 'onecycle', 'warmup_epochs': 5, 'use_focal_loss': True, 'focal_gamma': 1.3636499344142012, 'label_smoothing': 0.03668090197068677, 'grad_clip': 0.3042422429595378, 'quantization_bits': 16, 'quantize_weights': True, 'quantize_activations': True, 'calibration_batches': 62, 'quant_backend': 'fbgemm'}
2025-09-20 15:34:19,398 - INFO - _models.training_function_executor - Starting training with hyperparameters: {'lr': 0.002452612631133679, 'batch_size': 32, 'epochs': 76, 'weight_decay': 0.0002481040974867812, 'dropout': 0.07800932022121827, 'stem_channels': 26, 'dw_kernel_size': 9, 'cnn_width_mult': 0.5871254182522992, 'd_model': 119, 'nhead': 4, 'num_transformer_layers': 3, 'dim_feedforward': 213, 'optimizer': 'adamw', 'scheduler': 'onecycle', 'warmup_epochs': 5, 'use_focal_loss': True, 'focal_gamma': 1.3636499344142012, 'label_smoothing': 0.03668090197068677, 'grad_clip': 0.3042422429595378, 'quantization_bits': 16, 'quantize_weights': True, 'quantize_activations': True, 'calibration_batches': 62, 'quant_backend': 'fbgemm'}
2025-09-20 15:34:19,435 - ERROR - _models.training_function_executor - Training execution failed: embed_dim must be divisible by num_heads
2025-09-20 15:34:19,435 - ERROR - _models.training_function_executor - Training code: import math
import copy
from typing import Dict, Any, Tuple

import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import TensorDataset, DataLoader

# --------------...
2025-09-20 15:34:19,435 - ERROR - _models.training_function_executor - BO training objective failed: embed_dim must be divisible by num_heads
2025-09-20 15:34:19,435 - INFO - _models.training_function_executor - [PROFILE] objective(train+eval) FAILED took 0.041s
2025-09-20 15:34:19,435 - ERROR - evaluation.code_generation_pipeline_orchestrator - BO Trial 1 FAILED with error: embed_dim must be divisible by num_heads
2025-09-20 15:34:19,435 - ERROR - evaluation.code_generation_pipeline_orchestrator - üö® FAILING FAST: Trial 1 failed and no GPT fixes available
2025-09-20 15:34:19,435 - ERROR - evaluation.code_generation_pipeline_orchestrator - Error details: embed_dim must be divisible by num_heads
2025-09-20 15:34:19,436 - INFO - evaluation.code_generation_pipeline_orchestrator - üîç BO Error detected - sending to debug GPT immediately
2025-09-20 15:34:19,436 - ERROR - __main__ - Unhandled exception: Exception: GPT_FIXES_AVAILABLE
Traceback (most recent call last):
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 484, in <module>
    processed_real_data = process_real_data()
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 342, in process_real_data
    result = process_data_with_ai_enhanced_evaluation(
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 136, in process_data_with_ai_enhanced_evaluation
    result = train_with_iterative_selection(data, labels, device=device, **kwargs)
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 85, in train_with_iterative_selection
    best_model, pipeline_results = orchestrator.run_complete_pipeline(
  File "D:\_A\GPT_research\ml_pipeline\evaluation\code_generation_pipeline_orchestrator.py", line 91, in run_complete_pipeline
    bo_results = self._run_bayesian_optimization(X, y, device, code_rec)
  File "D:\_A\GPT_research\ml_pipeline\evaluation\code_generation_pipeline_orchestrator.py", line 189, in _run_bayesian_optimization
    return self._run_single_bo_session(X, y, device, code_rec, restart_attempt)
  File "D:\_A\GPT_research\ml_pipeline\evaluation\code_generation_pipeline_orchestrator.py", line 286, in _run_single_bo_session
    raise Exception("GPT_FIXES_AVAILABLE")  # This will trigger the error monitor flow
Exception: GPT_FIXES_AVAILABLE

2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Starting debug attempts (max: 4)
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Calling GPT to debug training error (attempt 1/4)
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Making API call to gpt-5
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Prompt length: 1076 characters
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Calling self.client.responses.create...
2025-09-20 15:34:19,450 - INFO - _models.ai_code_generator - Model parameter: gpt-5
