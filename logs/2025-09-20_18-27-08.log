2025-09-20 18:27:10,304 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 18:27:10,649 - INFO - __main__ - Logging system initialized successfully
2025-09-20 18:27:10,650 - INFO - __main__ - Starting AI-Enhanced Machine Learning Pipeline
2025-09-20 18:27:10,651 - INFO - __main__ - Starting real data processing from data/ directory
2025-09-20 18:27:10,652 - INFO - __main__ - Found 5 data files: ['mitdb_ecg_sample.csv', 'X.npy', 'y.npy', 'mitdb_ecg_data.npz', 'mitdb_metadata.json']
2025-09-20 18:27:10,652 - INFO - __main__ - Found NPY files, prioritizing them over CSV
2025-09-20 18:27:10,653 - INFO - __main__ - Attempting to load: X.npy
2025-09-20 18:27:10,784 - INFO - __main__ - Successfully loaded NPY data: X(62352, 1000, 2), y(62352,)
2025-09-20 18:27:10,873 - INFO - __main__ - Data loaded successfully: X.npy + y.npy, shape: (62352, 1000, 2), device: cuda
2025-09-20 18:27:10,874 - INFO - __main__ - Starting AI-enhanced data processing with new pipeline flow...
2025-09-20 18:27:10,874 - INFO - __main__ - Starting AI-enhanced training (single attempt, fail fast)
2025-09-20 18:27:10,874 - INFO - __main__ - Flow: Code Generation ‚Üí BO ‚Üí Evaluation
2025-09-20 18:27:10,876 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 18:27:10,876 - INFO - __main__ - Data profile: {'data_type': 'torch_tensor', 'shape': (62352, 1000, 2), 'dtype': 'float32', 'feature_count': 2, 'sample_count': 62352, 'is_sequence': True, 'is_image': False, 'is_tabular': False, 'has_labels': True, 'label_count': 5, 'sequence_lengths': None, 'channels': None, 'height': None, 'width': None, 'metadata': {}}
2025-09-20 18:27:10,876 - INFO - evaluation.code_generation_pipeline_orchestrator - Code generation pipeline orchestrator initialized (no retry logic)
2025-09-20 18:27:10,876 - INFO - evaluation.code_generation_pipeline_orchestrator - Starting code generation pipeline execution (single attempt, fail fast)
2025-09-20 18:27:10,876 - INFO - evaluation.code_generation_pipeline_orchestrator - Flow: AI Code Generation ‚Üí JSON Storage ‚Üí BO ‚Üí Training Execution ‚Üí Evaluation
2025-09-20 18:27:10,876 - INFO - evaluation.code_generation_pipeline_orchestrator - Creating centralized data splits to prevent data leakage
2025-09-20 18:27:10,876 - INFO - data_splitting - Creating centralized data splits with test_size=0.2, val_size=0.2
2025-09-20 18:27:10,876 - INFO - data_splitting - Input data shape: X=(62352, 1000, 2), y=(62352,)
2025-09-20 18:27:10,877 - INFO - data_splitting - Class distribution: [44897  9551  1201  1239  5464]
2025-09-20 18:27:11,087 - INFO - data_splitting - Computed class weights: {np.int64(0): np.float64(0.27775728256708315), np.int64(1): np.float64(1.3057591623036648), np.int64(2): np.float64(10.37815344603381), np.int64(3): np.float64(10.0640605296343), np.int64(4): np.float64(2.282184729768373)}
2025-09-20 18:27:11,087 - INFO - class_balancing - Class imbalance analysis:
2025-09-20 18:27:11,087 - INFO - class_balancing -   Strategy: severe_imbalance
2025-09-20 18:27:11,087 - INFO - class_balancing -   Imbalance ratio: 37.36
2025-09-20 18:27:11,087 - INFO - class_balancing -   Recommendations: Use weighted loss + weighted sampling, Consider Focal Loss, Evaluate with balanced metrics
2025-09-20 18:27:11,087 - INFO - data_splitting - Final splits - Train: 39904, Val: 9977, Test: 12471
2025-09-20 18:27:11,087 - INFO - data_splitting - Train class distribution: [28733  6112   769   793  3497]
2025-09-20 18:27:11,087 - INFO - data_splitting - Val class distribution: [7184 1529  192  198  874]
2025-09-20 18:27:11,087 - INFO - data_splitting - Test class distribution: [8980 1910  240  248 1093]
2025-09-20 18:27:11,087 - INFO - data_splitting - Recommended balancing strategy: severe_imbalance
2025-09-20 18:27:11,778 - INFO - data_splitting - Computed standardization stats - mean shape: torch.Size([1, 2]), std shape: torch.Size([1, 2])
2025-09-20 18:27:11,787 - INFO - evaluation.code_generation_pipeline_orchestrator - Computed standardization statistics from training data only
2025-09-20 18:27:11,787 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-20 18:27:11,787 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE EXECUTION (SINGLE ATTEMPT)
2025-09-20 18:27:11,787 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-20 18:27:11,787 - INFO - evaluation.code_generation_pipeline_orchestrator - ü§ñ STEP 1: AI Training Code Generation
2025-09-20 18:27:11,787 - INFO - _models.ai_code_generator - Making API call to gpt-5
2025-09-20 18:27:11,787 - INFO - _models.ai_code_generator - Prompt length: 2552 characters
2025-09-20 18:27:11,787 - INFO - _models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-20 18:27:11,787 - INFO - _models.ai_code_generator - Calling self.client.responses.create...
2025-09-20 18:27:11,787 - INFO - _models.ai_code_generator - Model parameter: gpt-5
2025-09-20 18:28:43,360 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-20 18:28:43,447 - INFO - _models.ai_code_generator - Successfully extracted response content
2025-09-20 18:28:43,447 - INFO - _models.ai_code_generator - AI generated training function: TinyECG1DCNN-PTQ
2025-09-20 18:28:43,447 - INFO - _models.ai_code_generator - Confidence: 0.90
2025-09-20 18:28:43,447 - INFO - evaluation.code_generation_pipeline_orchestrator - Generated training function: TinyECG1DCNN-PTQ
2025-09-20 18:28:43,447 - INFO - evaluation.code_generation_pipeline_orchestrator - BO parameters: ['lr', 'batch_size', 'epochs', 'weight_decay', 'base_channels', 'hidden_dim', 'dropout', 'grad_clip', 'calibration_batches', 'seed', 'quantization_bits', 'quantize_weights', 'quantize_activations']
2025-09-20 18:28:43,447 - INFO - evaluation.code_generation_pipeline_orchestrator - Confidence: 0.90
2025-09-20 18:28:43,449 - INFO - evaluation.code_generation_pipeline_orchestrator - üíæ STEP 2: Save Training Function to JSON
2025-09-20 18:28:43,452 - INFO - _models.ai_code_generator - Training function saved to: generated_training_functions\training_function_torch_tensor_TinyECG1DCNN-PTQ_1758410923.json
2025-09-20 18:28:43,452 - INFO - evaluation.code_generation_pipeline_orchestrator - Training function saved to: generated_training_functions\training_function_torch_tensor_TinyECG1DCNN-PTQ_1758410923.json
2025-09-20 18:28:43,452 - INFO - evaluation.code_generation_pipeline_orchestrator - üîç STEP 3: Bayesian Optimization
2025-09-20 18:28:43,452 - INFO - evaluation.code_generation_pipeline_orchestrator - Running BO for generated training function: TinyECG1DCNN-PTQ
2025-09-20 18:28:43,452 - INFO - evaluation.code_generation_pipeline_orchestrator - üì¶ Installing dependencies for GPT-generated training code...
2025-09-20 18:28:43,454 - INFO - package_installer - üîç Analyzing GPT-generated code for package dependencies...
2025-09-20 18:28:43,457 - INFO - package_installer - Extracted imports from code: {'torch'}
2025-09-20 18:28:43,457 - INFO - package_installer - Available packages: {'torch'}
2025-09-20 18:28:43,457 - INFO - package_installer - Missing packages: set()
2025-09-20 18:28:43,457 - INFO - package_installer - ‚úÖ All required packages are already available
2025-09-20 18:28:43,457 - INFO - evaluation.code_generation_pipeline_orchestrator - ‚úÖ All dependencies installed successfully
2025-09-20 18:28:43,536 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 18:28:43,536 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 18:28:43,536 - INFO - evaluation.code_generation_pipeline_orchestrator - BO dataset size: 5000 samples (using bo_sample_num=5000)
2025-09-20 18:28:43,536 - INFO - evaluation.code_generation_pipeline_orchestrator - BO will optimize: ['lr', 'batch_size', 'epochs', 'weight_decay', 'base_channels', 'hidden_dim', 'dropout', 'grad_clip', 'calibration_batches', 'seed', 'quantization_bits', 'quantize_weights', 'quantize_activations']
2025-09-20 18:28:43,536 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 18:28:43,618 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 18:28:43,618 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 18:28:43,618 - INFO - _models.training_function_executor - Using BO subset for optimization: 5000 samples (bo_sample_num=5000)
2025-09-20 18:28:43,627 - INFO - _models.training_function_executor - BO splits - Train: 4000, Val: 1000
2025-09-20 18:28:43,901 - INFO - bo.run_bo - Converted GPT search space: 13 parameters
2025-09-20 18:28:43,901 - INFO - bo.run_bo - Using GPT-generated search space
2025-09-20 18:28:43,902 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-20 18:28:43,902 - INFO - bo.run_bo - üîçBO Trial 1: Initial random exploration
2025-09-20 18:28:43,902 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-20 18:28:43,902 - INFO - _models.training_function_executor - Using device: cuda
2025-09-20 18:28:43,902 - INFO - _models.training_function_executor - Executing training function: TinyECG1DCNN-PTQ
2025-09-20 18:28:43,902 - INFO - _models.training_function_executor - Hyperparameters: {'lr': 0.0009400123577853062, 'batch_size': 32, 'epochs': 76, 'weight_decay': 0.0002481040974867812, 'base_channels': 14, 'hidden_dim': 98, 'dropout': 0.049987457909001456, 'grad_clip': 0.45924889196586727, 'calibration_batches': 124, 'seed': 175203, 'quantization_bits': 8, 'quantize_weights': False, 'quantize_activations': True}
2025-09-20 18:28:43,905 - INFO - _models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0009400123577853062, 'batch_size': 32, 'epochs': 76, 'weight_decay': 0.0002481040974867812, 'base_channels': 14, 'hidden_dim': 98, 'dropout': 0.049987457909001456, 'grad_clip': 0.45924889196586727, 'calibration_batches': 124, 'seed': 175203, 'quantization_bits': 8, 'quantize_weights': False, 'quantize_activations': True}
