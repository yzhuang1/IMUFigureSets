2025-09-15 03:01:46,948 - INFO - __main__ - Logging system initialized successfully
2025-09-15 03:01:46,950 - INFO - __main__ - Found 5 data files: ['mitdb_ecg_sample.csv', 'y.npy', 'X.npy', 'mitdb_ecg_data.npz', 'mitdb_metadata.json']
2025-09-15 03:01:46,951 - INFO - __main__ - Found NPY files, prioritizing them over CSV
2025-09-15 03:01:46,951 - INFO - __main__ - Attempting to load: y.npy
2025-09-15 03:01:46,952 - INFO - __main__ - Attempting to load: X.npy
2025-09-15 03:01:47,250 - INFO - __main__ - Successfully loaded NPY data: X(62352, 1000, 2), y(62352,)
2025-09-15 03:01:47,550 - INFO - __main__ - Starting AI-enhanced data processing with new pipeline flow...
2025-09-15 03:01:47,550 - INFO - __main__ - Starting AI-enhanced training with new pipeline flow
2025-09-15 03:01:47,551 - INFO - __main__ - Flow: Template Selection → BO → Evaluation → Feedback Loop
2025-09-15 03:01:47,563 - INFO - __main__ - Data profile: DataProfile(type=numpy_array, shape=(62352, 1000, 2), samples=62352, features=2)
2025-09-15 03:01:47,564 - INFO - evaluation.code_generation_pipeline_orchestrator - Code generation pipeline orchestrator initialized with max 4 attempts
2025-09-15 03:01:47,564 - INFO - evaluation.code_generation_pipeline_orchestrator - Starting code generation pipeline execution
2025-09-15 03:01:47,564 - INFO - evaluation.code_generation_pipeline_orchestrator - Flow: AI Code Generation → JSON Storage → BO → Training Execution → Evaluation
2025-09-15 03:01:47,564 - INFO - evaluation.code_generation_pipeline_orchestrator - Creating centralized data splits to prevent data leakage
2025-09-15 03:01:47,564 - INFO - data_splitting - Creating centralized data splits with test_size=0.2, val_size=0.2
2025-09-15 03:01:47,564 - INFO - data_splitting - Input data shape: X=(62352, 1000, 2), y=(62352,)
2025-09-15 03:01:47,566 - INFO - data_splitting - Class distribution: [44897  9551  1201  1239  5464]
2025-09-15 03:01:48,199 - INFO - data_splitting - Computed class weights: {np.int64(0): np.float64(0.27775728256708315), np.int64(1): np.float64(1.3057591623036648), np.int64(2): np.float64(10.37815344603381), np.int64(3): np.float64(10.0640605296343), np.int64(4): np.float64(2.282184729768373)}
2025-09-15 03:01:48,200 - INFO - class_balancing - Class imbalance analysis:
2025-09-15 03:01:48,200 - INFO - class_balancing -   Strategy: severe_imbalance
2025-09-15 03:01:48,200 - INFO - class_balancing -   Imbalance ratio: 37.36
2025-09-15 03:01:48,200 - INFO - class_balancing -   Recommendations: Use weighted loss + weighted sampling, Consider Focal Loss, Evaluate with balanced metrics
2025-09-15 03:01:48,200 - INFO - data_splitting - Final splits - Train: 39904, Val: 9977, Test: 12471
2025-09-15 03:01:48,201 - INFO - data_splitting - Train class distribution: [28733  6112   769   793  3497]
2025-09-15 03:01:48,201 - INFO - data_splitting - Val class distribution: [7184 1529  192  198  874]
2025-09-15 03:01:48,202 - INFO - data_splitting - Test class distribution: [8980 1910  240  248 1093]
2025-09-15 03:01:48,202 - INFO - data_splitting - Recommended balancing strategy: severe_imbalance
2025-09-15 03:01:49,516 - INFO - data_splitting - Computed standardization stats - mean shape: torch.Size([1, 2]), std shape: torch.Size([1, 2])
2025-09-15 03:01:49,518 - INFO - evaluation.code_generation_pipeline_orchestrator - Computed standardization statistics from training data only
2025-09-15 03:01:49,521 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-15 03:01:49,521 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE ATTEMPT 1/4
2025-09-15 03:01:49,521 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-15 03:01:49,521 - INFO - evaluation.code_generation_pipeline_orchestrator - 🤖 STEP 1: AI Training Code Generation
2025-09-15 03:01:49,521 - INFO - models.ai_code_generator - Conducting literature review before code generation...
2025-09-15 03:01:49,522 - INFO - models.literature_review - Making GPT-5 literature review call with query: sequence classification time series machine learning multiclass sequence classification 2024 2025 PyTorch implementation state-of-the-art methods
2025-09-15 03:03:28,934 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-15 03:03:29,145 - INFO - models.literature_review - Successfully completed GPT-5 literature review with web search
2025-09-15 03:03:29,146 - INFO - models.literature_review - Literature review completed with confidence: 0.78
2025-09-15 03:03:29,146 - INFO - models.literature_review - Found 5 recommended approaches
2025-09-15 03:03:29,147 - INFO - models.literature_review - Literature review saved to: literature_reviews/literature_review_numpy_array_1757905409.txt
2025-09-15 03:03:29,147 - INFO - models.ai_code_generator - Literature review saved to: literature_reviews/literature_review_numpy_array_1757905409.txt
2025-09-15 03:03:29,147 - WARNING - models.ai_code_generator - AI code generation with literature review failed: 'num_samples', using fallback
2025-09-15 03:03:29,147 - INFO - evaluation.code_generation_pipeline_orchestrator - Generated training function: FallbackLSTM
2025-09-15 03:03:29,147 - INFO - evaluation.code_generation_pipeline_orchestrator - Reasoning: Fallback: LSTM selected for sequence data
2025-09-15 03:03:29,147 - INFO - evaluation.code_generation_pipeline_orchestrator - BO parameters: ['lr', 'epochs', 'batch_size', 'hidden_size', 'dropout', 'num_layers']
2025-09-15 03:03:29,147 - INFO - evaluation.code_generation_pipeline_orchestrator - Confidence: 0.70
2025-09-15 03:03:29,147 - INFO - evaluation.code_generation_pipeline_orchestrator - 💾 STEP 2: Save Training Function to JSON
2025-09-15 03:03:29,148 - INFO - models.ai_code_generator - Training function saved to: generated_training_functions/training_function_numpy_array_FallbackLSTM_1757905409.json
2025-09-15 03:03:29,148 - INFO - evaluation.code_generation_pipeline_orchestrator - Training function saved to: generated_training_functions/training_function_numpy_array_FallbackLSTM_1757905409.json
2025-09-15 03:03:29,151 - INFO - models.training_function_executor - Training function validation passed
2025-09-15 03:03:29,151 - INFO - evaluation.code_generation_pipeline_orchestrator - 🔍 STEP 3: Bayesian Optimization
2025-09-15 03:03:29,151 - INFO - evaluation.code_generation_pipeline_orchestrator - Running BO for generated training function: FallbackLSTM
2025-09-15 03:03:29,197 - INFO - evaluation.code_generation_pipeline_orchestrator - BO dataset size: 5000 samples
2025-09-15 03:03:29,197 - INFO - evaluation.code_generation_pipeline_orchestrator - BO will optimize: ['lr', 'epochs', 'batch_size', 'hidden_size', 'dropout', 'num_layers']
2025-09-15 03:03:29,198 - INFO - models.training_function_executor - GPU available: NVIDIA H100 NVL
2025-09-15 03:03:29,198 - WARNING - models.training_function_executor - Using provided subset instead of centralized splits - this may cause data leakage
2025-09-15 03:03:29,787 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-15 03:03:29,799 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-15 03:03:29,801 - INFO - bo.run_bo - BO Trial 1: Initial random exploration
2025-09-15 03:03:29,801 - INFO - bo.run_bo - [PROFILE] suggest() took 0.002s
2025-09-15 03:03:29,802 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:03:29,802 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:03:29,802 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.01535224694197351, 'epochs': 17, 'batch_size': 128, 'hidden_size': 204, 'dropout': 0.41779511056254093, 'num_layers': 2}
2025-09-15 03:03:29,804 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.01535224694197351, 'epochs': 17, 'batch_size': 128, 'hidden_size': 204, 'dropout': 0.41779511056254093, 'num_layers': 2}
2025-09-15 03:04:42,829 - INFO - models.training_function_executor - Training completed successfully: {'val_accuracy': 0.714, 'final_loss': 0.9390367232263088, 'macro_f1': 0.16662777129521586, 'model_name': 'FallbackLSTM', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.01535224694197351, 'epochs': 17, 'batch_size': 128, 'hidden_size': 204, 'dropout': 0.41779511056254093, 'num_layers': 2}}
2025-09-15 03:04:42,830 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 73.029s
2025-09-15 03:04:42,831 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.1666
2025-09-15 03:04:42,831 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.001s
2025-09-15 03:04:42,831 - INFO - bo.run_bo - Recorded observation #1: hparams={'lr': 0.01535224694197351, 'epochs': np.int64(17), 'batch_size': 128, 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093, 'num_layers': np.int64(2)}, value=0.1666
2025-09-15 03:04:42,831 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 1: {'lr': 0.01535224694197351, 'epochs': np.int64(17), 'batch_size': 128, 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093, 'num_layers': np.int64(2)} -> 0.1666
2025-09-15 03:04:42,834 - INFO - bo.run_bo - BO Trial 2: Initial random exploration
2025-09-15 03:04:42,834 - INFO - bo.run_bo - [PROFILE] suggest() took 0.003s
2025-09-15 03:04:42,835 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:04:42,835 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:04:42,835 - INFO - models.training_function_executor - Hyperparameters: {'lr': 4.20705395028794e-05, 'epochs': 13, 'batch_size': 32, 'hidden_size': 388, 'dropout': 0.4207805082202462, 'num_layers': 3}
2025-09-15 03:04:42,837 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 4.20705395028794e-05, 'epochs': 13, 'batch_size': 32, 'hidden_size': 388, 'dropout': 0.4207805082202462, 'num_layers': 3}
2025-09-15 03:10:05,153 - INFO - models.training_function_executor - Training completed successfully: {'val_accuracy': 0.714, 'final_loss': 0.8643530054092408, 'macro_f1': 0.17515185813997358, 'model_name': 'FallbackLSTM', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 4.20705395028794e-05, 'epochs': 13, 'batch_size': 32, 'hidden_size': 388, 'dropout': 0.4207805082202462, 'num_layers': 3}}
2025-09-15 03:10:05,153 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 322.319s
2025-09-15 03:10:05,154 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.1752
2025-09-15 03:10:05,154 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.001s
2025-09-15 03:10:05,154 - INFO - bo.run_bo - Recorded observation #2: hparams={'lr': 4.20705395028794e-05, 'epochs': np.int64(13), 'batch_size': 32, 'hidden_size': np.int64(388), 'dropout': 0.4207805082202462, 'num_layers': np.int64(3)}, value=0.1752
2025-09-15 03:10:05,155 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 2: {'lr': 4.20705395028794e-05, 'epochs': np.int64(13), 'batch_size': 32, 'hidden_size': np.int64(388), 'dropout': 0.4207805082202462, 'num_layers': np.int64(3)} -> 0.1752
2025-09-15 03:10:05,157 - INFO - bo.run_bo - BO Trial 3: Initial random exploration
2025-09-15 03:10:05,157 - INFO - bo.run_bo - [PROFILE] suggest() took 0.003s
2025-09-15 03:10:05,158 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:10:05,158 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:10:05,158 - INFO - models.training_function_executor - Hyperparameters: {'lr': 1.2087541473056955e-05, 'epochs': 4, 'batch_size': 128, 'hidden_size': 429, 'dropout': 0.14863737747479333, 'num_layers': 4}
2025-09-15 03:10:05,161 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 1.2087541473056955e-05, 'epochs': 4, 'batch_size': 128, 'hidden_size': 429, 'dropout': 0.14863737747479333, 'num_layers': 4}
2025-09-15 03:10:50,875 - INFO - models.training_function_executor - Training completed successfully: {'val_accuracy': 0.714, 'final_loss': 1.188704151660204, 'macro_f1': 0.16662777129521586, 'model_name': 'FallbackLSTM', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 1.2087541473056955e-05, 'epochs': 4, 'batch_size': 128, 'hidden_size': 429, 'dropout': 0.14863737747479333, 'num_layers': 4}}
2025-09-15 03:10:50,875 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 45.718s
2025-09-15 03:10:51,282 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.1666
2025-09-15 03:10:51,283 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.407s
2025-09-15 03:10:51,283 - INFO - bo.run_bo - Recorded observation #3: hparams={'lr': 1.2087541473056955e-05, 'epochs': np.int64(4), 'batch_size': 128, 'hidden_size': np.int64(429), 'dropout': 0.14863737747479333, 'num_layers': np.int64(4)}, value=0.1666
2025-09-15 03:10:51,283 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 3: {'lr': 1.2087541473056955e-05, 'epochs': np.int64(4), 'batch_size': 128, 'hidden_size': np.int64(429), 'dropout': 0.14863737747479333, 'num_layers': np.int64(4)} -> 0.1666
2025-09-15 03:10:51,283 - INFO - bo.run_bo - BO Trial 4: Using RF surrogate + Expected Improvement
2025-09-15 03:10:51,284 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 03:10:51,284 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:10:51,284 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:10:51,284 - INFO - models.training_function_executor - Hyperparameters: {'lr': 5.4152441194025364e-05, 'epochs': 13, 'batch_size': 256, 'hidden_size': 232, 'dropout': 0.42515784524199296, 'num_layers': 3}
2025-09-15 03:10:51,286 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 5.4152441194025364e-05, 'epochs': 13, 'batch_size': 256, 'hidden_size': 232, 'dropout': 0.42515784524199296, 'num_layers': 3}
2025-09-15 03:11:41,101 - INFO - models.training_function_executor - Training completed successfully: {'val_accuracy': 0.713, 'final_loss': 0.8925658464431763, 'macro_f1': 0.16649153531815528, 'model_name': 'FallbackLSTM', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 5.4152441194025364e-05, 'epochs': 13, 'batch_size': 256, 'hidden_size': 232, 'dropout': 0.42515784524199296, 'num_layers': 3}}
2025-09-15 03:11:41,102 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 49.818s
2025-09-15 03:11:41,512 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.1665
2025-09-15 03:11:41,512 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.410s
2025-09-15 03:11:41,512 - INFO - bo.run_bo - Recorded observation #4: hparams={'lr': 5.4152441194025364e-05, 'epochs': np.int64(13), 'batch_size': np.int64(256), 'hidden_size': np.int64(232), 'dropout': 0.42515784524199296, 'num_layers': np.int64(3)}, value=0.1665
2025-09-15 03:11:41,512 - INFO - bo.run_bo - BO Trial 5: Using RF surrogate + Expected Improvement
2025-09-15 03:11:41,513 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 03:11:41,513 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:11:41,513 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:11:41,513 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.00017967486125283075, 'epochs': 9, 'batch_size': 64, 'hidden_size': 38, 'dropout': 0.4077105489062445, 'num_layers': 4}
2025-09-15 03:11:41,516 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.00017967486125283075, 'epochs': 9, 'batch_size': 64, 'hidden_size': 38, 'dropout': 0.4077105489062445, 'num_layers': 4}
2025-09-15 03:11:48,466 - INFO - models.training_function_executor - Training completed successfully: {'val_accuracy': 0.714, 'final_loss': 0.899344025150178, 'macro_f1': 0.16662777129521586, 'model_name': 'FallbackLSTM', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.00017967486125283075, 'epochs': 9, 'batch_size': 64, 'hidden_size': 38, 'dropout': 0.4077105489062445, 'num_layers': 4}}
2025-09-15 03:11:48,466 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 6.953s
2025-09-15 03:11:48,872 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.1666
2025-09-15 03:11:48,872 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.406s
2025-09-15 03:11:48,872 - INFO - bo.run_bo - Recorded observation #5: hparams={'lr': 0.00017967486125283075, 'epochs': np.int64(9), 'batch_size': np.int64(64), 'hidden_size': np.int64(38), 'dropout': 0.4077105489062445, 'num_layers': np.int64(4)}, value=0.1666
2025-09-15 03:11:48,873 - INFO - bo.run_bo - BO Trial 6: Using RF surrogate + Expected Improvement
2025-09-15 03:11:48,873 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 03:11:48,873 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 03:11:48,873 - INFO - models.training_function_executor - Executing training function: FallbackLSTM
2025-09-15 03:11:48,873 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.029054252676174452, 'epochs': 8, 'batch_size': 8, 'hidden_size': 279, 'dropout': 0.6099036726033209, 'num_layers': 3}
2025-09-15 03:11:48,875 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.029054252676174452, 'epochs': 8, 'batch_size': 8, 'hidden_size': 279, 'dropout': 0.6099036726033209, 'num_layers': 3}
