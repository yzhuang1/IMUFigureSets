2025-09-20 16:05:40,816 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 16:05:41,164 - INFO - __main__ - Logging system initialized successfully
2025-09-20 16:05:41,164 - INFO - __main__ - Starting AI-Enhanced Machine Learning Pipeline
2025-09-20 16:05:41,164 - INFO - __main__ - Starting real data processing from data/ directory
2025-09-20 16:05:41,166 - INFO - __main__ - Found 5 data files: ['mitdb_ecg_sample.csv', 'X.npy', 'y.npy', 'mitdb_ecg_data.npz', 'mitdb_metadata.json']
2025-09-20 16:05:41,166 - INFO - __main__ - Found NPY files, prioritizing them over CSV
2025-09-20 16:05:41,166 - INFO - __main__ - Attempting to load: X.npy
2025-09-20 16:05:41,296 - INFO - __main__ - Successfully loaded NPY data: X(62352, 1000, 2), y(62352,)
2025-09-20 16:05:41,389 - INFO - __main__ - Data loaded successfully: X.npy + y.npy, shape: (62352, 1000, 2), device: cuda
2025-09-20 16:05:41,390 - INFO - __main__ - Starting AI-enhanced data processing with new pipeline flow...
2025-09-20 16:05:41,390 - INFO - __main__ - Starting AI-enhanced training (single attempt, fail fast)
2025-09-20 16:05:41,390 - INFO - __main__ - Flow: Code Generation ‚Üí BO ‚Üí Evaluation
2025-09-20 16:05:41,392 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 16:05:41,392 - INFO - __main__ - Data profile: {'data_type': 'torch_tensor', 'shape': (62352, 1000, 2), 'dtype': 'float32', 'feature_count': 2, 'sample_count': 62352, 'is_sequence': True, 'is_image': False, 'is_tabular': False, 'has_labels': True, 'label_count': 5, 'sequence_lengths': None, 'channels': None, 'height': None, 'width': None, 'metadata': {}}
2025-09-20 16:05:41,392 - INFO - evaluation.code_generation_pipeline_orchestrator - Code generation pipeline orchestrator initialized (no retry logic)
2025-09-20 16:05:41,392 - INFO - evaluation.code_generation_pipeline_orchestrator - Starting code generation pipeline execution (single attempt, fail fast)
2025-09-20 16:05:41,392 - INFO - evaluation.code_generation_pipeline_orchestrator - Flow: AI Code Generation ‚Üí JSON Storage ‚Üí BO ‚Üí Training Execution ‚Üí Evaluation
2025-09-20 16:05:41,392 - INFO - evaluation.code_generation_pipeline_orchestrator - Creating centralized data splits to prevent data leakage
2025-09-20 16:05:41,392 - INFO - data_splitting - Creating centralized data splits with test_size=0.2, val_size=0.2
2025-09-20 16:05:41,392 - INFO - data_splitting - Input data shape: X=(62352, 1000, 2), y=(62352,)
2025-09-20 16:05:41,393 - INFO - data_splitting - Class distribution: [44897  9551  1201  1239  5464]
2025-09-20 16:05:41,610 - INFO - data_splitting - Computed class weights: {np.int64(0): np.float64(0.27775728256708315), np.int64(1): np.float64(1.3057591623036648), np.int64(2): np.float64(10.37815344603381), np.int64(3): np.float64(10.0640605296343), np.int64(4): np.float64(2.282184729768373)}
2025-09-20 16:05:41,610 - INFO - class_balancing - Class imbalance analysis:
2025-09-20 16:05:41,610 - INFO - class_balancing -   Strategy: severe_imbalance
2025-09-20 16:05:41,611 - INFO - class_balancing -   Imbalance ratio: 37.36
2025-09-20 16:05:41,611 - INFO - class_balancing -   Recommendations: Use weighted loss + weighted sampling, Consider Focal Loss, Evaluate with balanced metrics
2025-09-20 16:05:41,611 - INFO - data_splitting - Final splits - Train: 39904, Val: 9977, Test: 12471
2025-09-20 16:05:41,611 - INFO - data_splitting - Train class distribution: [28733  6112   769   793  3497]
2025-09-20 16:05:41,611 - INFO - data_splitting - Val class distribution: [7184 1529  192  198  874]
2025-09-20 16:05:41,611 - INFO - data_splitting - Test class distribution: [8980 1910  240  248 1093]
2025-09-20 16:05:41,611 - INFO - data_splitting - Recommended balancing strategy: severe_imbalance
2025-09-20 16:05:42,348 - INFO - data_splitting - Computed standardization stats - mean shape: torch.Size([1, 2]), std shape: torch.Size([1, 2])
2025-09-20 16:05:42,357 - INFO - evaluation.code_generation_pipeline_orchestrator - Computed standardization statistics from training data only
2025-09-20 16:05:42,357 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-20 16:05:42,357 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE EXECUTION (SINGLE ATTEMPT)
2025-09-20 16:05:42,357 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-20 16:05:42,357 - INFO - evaluation.code_generation_pipeline_orchestrator - ü§ñ STEP 1: AI Training Code Generation
2025-09-20 16:05:42,357 - INFO - _models.ai_code_generator - Making API call to gpt-5
2025-09-20 16:05:42,357 - INFO - _models.ai_code_generator - Prompt length: 2552 characters
2025-09-20 16:05:42,357 - INFO - _models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-20 16:05:42,357 - INFO - _models.ai_code_generator - Calling self.client.responses.create...
2025-09-20 16:05:42,357 - INFO - _models.ai_code_generator - Model parameter: gpt-5
2025-09-20 16:07:27,980 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-20 16:07:28,046 - INFO - _models.ai_code_generator - Successfully extracted response content
2025-09-20 16:07:28,047 - INFO - _models.ai_code_generator - AI generated training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:28,047 - INFO - _models.ai_code_generator - Confidence: 0.90
2025-09-20 16:07:28,047 - INFO - evaluation.code_generation_pipeline_orchestrator - Generated training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:28,047 - INFO - evaluation.code_generation_pipeline_orchestrator - BO parameters: ['lr', 'batch_size', 'epochs', 'hidden_size', 'num_layers', 'dropout', 'weight_decay', 'optimizer', 'early_stopping_patience', 'quantization_bits', 'quantize_weights', 'quantize_activations', 'seed']
2025-09-20 16:07:28,047 - INFO - evaluation.code_generation_pipeline_orchestrator - Confidence: 0.90
2025-09-20 16:07:28,048 - INFO - evaluation.code_generation_pipeline_orchestrator - üíæ STEP 2: Save Training Function to JSON
2025-09-20 16:07:28,053 - INFO - _models.ai_code_generator - Training function saved to: generated_training_functions\training_function_torch_tensor_ShallowMLP-Arrhythmia-5class_1758402448.json
2025-09-20 16:07:28,053 - INFO - evaluation.code_generation_pipeline_orchestrator - Training function saved to: generated_training_functions\training_function_torch_tensor_ShallowMLP-Arrhythmia-5class_1758402448.json
2025-09-20 16:07:28,053 - INFO - evaluation.code_generation_pipeline_orchestrator - üîç STEP 3: Bayesian Optimization
2025-09-20 16:07:28,053 - INFO - evaluation.code_generation_pipeline_orchestrator - Running BO for generated training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:28,053 - INFO - evaluation.code_generation_pipeline_orchestrator - üì¶ Installing dependencies for GPT-generated training code...
2025-09-20 16:07:28,054 - INFO - package_installer - üîç Analyzing GPT-generated code for package dependencies...
2025-09-20 16:07:28,054 - WARNING - package_installer - Could not parse code for imports due to syntax error: unexpected character after line continuation character (<unknown>, line 1)
2025-09-20 16:07:28,054 - INFO - package_installer - Extracted imports from code: set()
2025-09-20 16:07:28,054 - INFO - package_installer - ‚úÖ No external packages required
2025-09-20 16:07:28,054 - INFO - evaluation.code_generation_pipeline_orchestrator - ‚úÖ All dependencies installed successfully
2025-09-20 16:07:28,147 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 16:07:28,148 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 16:07:28,148 - INFO - evaluation.code_generation_pipeline_orchestrator - BO dataset size: 5000 samples (using bo_sample_num=5000)
2025-09-20 16:07:28,148 - INFO - evaluation.code_generation_pipeline_orchestrator - BO will optimize: ['lr', 'batch_size', 'epochs', 'hidden_size', 'num_layers', 'dropout', 'weight_decay', 'optimizer', 'early_stopping_patience', 'quantization_bits', 'quantize_weights', 'quantize_activations', 'seed']
2025-09-20 16:07:28,149 - INFO - _models.training_function_executor - GPU available: NVIDIA GeForce RTX 3070 Ti Laptop GPU
2025-09-20 16:07:28,237 - INFO - data_splitting - Created BO subset: 5000 samples
2025-09-20 16:07:28,237 - INFO - data_splitting - BO subset class distribution: [3600  766   96  100  438]
2025-09-20 16:07:28,237 - INFO - _models.training_function_executor - Using BO subset for optimization: 5000 samples (bo_sample_num=5000)
2025-09-20 16:07:28,248 - INFO - _models.training_function_executor - BO splits - Train: 4000, Val: 1000
2025-09-20 16:07:28,542 - INFO - bo.run_bo - Converted GPT search space: 13 parameters
2025-09-20 16:07:28,543 - INFO - bo.run_bo - Using GPT-generated search space
2025-09-20 16:07:28,543 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-20 16:07:28,545 - INFO - bo.run_bo - üîçBO Trial 1: Initial random exploration
2025-09-20 16:07:28,545 - INFO - bo.run_bo - [PROFILE] suggest() took 0.001s
2025-09-20 16:07:28,545 - INFO - _models.training_function_executor - Using device: cuda
2025-09-20 16:07:28,545 - INFO - _models.training_function_executor - Executing training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:28,545 - INFO - _models.training_function_executor - Hyperparameters: {'lr': 0.009609812947036413, 'batch_size': 32, 'epochs': 76, 'hidden_size': 204, 'num_layers': 1, 'dropout': 0.07800932022121827, 'weight_decay': 0.0015599452033620267, 'optimizer': 'Adam', 'early_stopping_patience': 20, 'quantization_bits': 16, 'quantize_weights': False, 'quantize_activations': True, 'seed': 787202}
2025-09-20 16:07:28,547 - INFO - _models.training_function_executor - Starting training with hyperparameters: {'lr': 0.009609812947036413, 'batch_size': 32, 'epochs': 76, 'hidden_size': 204, 'num_layers': 1, 'dropout': 0.07800932022121827, 'weight_decay': 0.0015599452033620267, 'optimizer': 'Adam', 'early_stopping_patience': 20, 'quantization_bits': 16, 'quantize_weights': False, 'quantize_activations': True, 'seed': 787202}
2025-09-20 16:07:30,090 - ERROR - _models.training_function_executor - Training execution failed: mat1 and mat2 shapes cannot be multiplied (32000x2 and 1000x204)
2025-09-20 16:07:30,090 - ERROR - _models.training_function_executor - Training code: import copy
import math
import time
from typing import Dict, Any

import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import TensorDataset, DataLoader

# Prefer to...
2025-09-20 16:07:30,090 - ERROR - _models.training_function_executor - BO training objective failed: mat1 and mat2 shapes cannot be multiplied (32000x2 and 1000x204)
2025-09-20 16:07:30,090 - INFO - _models.training_function_executor - [PROFILE] objective(train+eval) FAILED took 1.545s
2025-09-20 16:07:30,090 - ERROR - evaluation.code_generation_pipeline_orchestrator - BO Trial 1 FAILED with error: mat1 and mat2 shapes cannot be multiplied (32000x2 and 1000x204)
2025-09-20 16:07:30,090 - INFO - evaluation.code_generation_pipeline_orchestrator - ‚è≥ Waiting for error monitor to process and generate GPT fixes...
2025-09-20 16:07:30,131 - INFO - _models.ai_code_generator - Starting debug attempts (max: 4)
2025-09-20 16:07:32,090 - ERROR - evaluation.code_generation_pipeline_orchestrator - üö® FAILING FAST: Trial 1 failed and no GPT fixes available
2025-09-20 16:07:32,090 - ERROR - evaluation.code_generation_pipeline_orchestrator - Error details: mat1 and mat2 shapes cannot be multiplied (32000x2 and 1000x204)
2025-09-20 16:07:32,090 - INFO - evaluation.code_generation_pipeline_orchestrator - üõë Stopping BO due to unfixable error
2025-09-20 16:07:32,090 - WARNING - evaluation.code_generation_pipeline_orchestrator - BO stopped due to unfixable error - returning fallback results
2025-09-20 16:07:32,091 - INFO - evaluation.code_generation_pipeline_orchestrator - üöÄ STEP 4: Final Training Execution
2025-09-20 16:07:32,091 - INFO - evaluation.code_generation_pipeline_orchestrator - Using centralized splits - Train: (39904, 1000, 2), Val: (9977, 1000, 2), Test: (12471, 1000, 2)
2025-09-20 16:07:32,271 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 16:07:32,279 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 16:07:32,289 - INFO - adapters.universal_converter - Data conversion: numpy_array -> torch_tensor
2025-09-20 16:07:32,304 - INFO - _models.training_function_executor - Loaded training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:32,304 - INFO - _models.training_function_executor - Reasoning: No reasoning provided
2025-09-20 16:07:32,304 - INFO - evaluation.code_generation_pipeline_orchestrator - Executing final training with optimized params: None
2025-09-20 16:07:32,304 - INFO - _models.training_function_executor - Using device: cuda
2025-09-20 16:07:32,350 - INFO - _models.training_function_executor - Executing training function: ShallowMLP-Arrhythmia-5class
2025-09-20 16:07:32,350 - INFO - _models.training_function_executor - Hyperparameters: None
2025-09-20 16:07:32,352 - INFO - _models.training_function_executor - Starting training with hyperparameters: {'lr': 0.001, 'batch_size': 256, 'epochs': 20, 'hidden_size': 128, 'num_layers': 2, 'dropout': 0.1, 'weight_decay': 0.0, 'optimizer': 'Adam', 'early_stopping_patience': 0, 'quantization_bits': 8, 'quantize_weights': True, 'quantize_activations': True, 'seed': 42}
2025-09-20 16:07:32,358 - ERROR - _models.training_function_executor - Training execution failed: mat1 and mat2 shapes cannot be multiplied (256000x2 and 1000x128)
2025-09-20 16:07:32,358 - ERROR - _models.training_function_executor - Training code: import copy
import math
import time
from typing import Dict, Any

import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import TensorDataset, DataLoader

# Prefer to...
2025-09-20 16:07:32,371 - ERROR - __main__ - Unhandled exception: RuntimeError: mat1 and mat2 shapes cannot be multiplied (256000x2 and 1000x128)
Traceback (most recent call last):
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 484, in <module>
    processed_real_data = process_real_data()
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 342, in process_real_data
    result = process_data_with_ai_enhanced_evaluation(
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 136, in process_data_with_ai_enhanced_evaluation
    result = train_with_iterative_selection(data, labels, device=device, **kwargs)
  File "D:\_A\GPT_research\ml_pipeline\main.py", line 85, in train_with_iterative_selection
    best_model, pipeline_results = orchestrator.run_complete_pipeline(
  File "D:\_A\GPT_research\ml_pipeline\evaluation\code_generation_pipeline_orchestrator.py", line 98, in run_complete_pipeline
    final_model, training_results = self._execute_final_training(
  File "D:\_A\GPT_research\ml_pipeline\evaluation\code_generation_pipeline_orchestrator.py", line 436, in _execute_final_training
    trained_model, training_metrics = training_executor.execute_training_function(
  File "D:\_A\GPT_research\ml_pipeline\_models\training_function_executor.py", line 187, in execute_training_function
    model, metrics = train_model(
  File "<string>", line 236, in train_model
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "<string>", line 39, in forward
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\container.py", line 250, in forward
    input = module(input)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\22447\.conda\envs\GPT\lib\site-packages\torch\nn\modules\linear.py", line 125, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (256000x2 and 1000x128)

