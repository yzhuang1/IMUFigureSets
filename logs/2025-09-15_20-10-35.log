2025-09-15 20:10:35,815 - INFO - __main__ - Logging system initialized successfully
2025-09-15 20:10:35,817 - INFO - __main__ - Found 5 data files: ['mitdb_ecg_sample.csv', 'y.npy', 'X.npy', 'mitdb_ecg_data.npz', 'mitdb_metadata.json']
2025-09-15 20:10:35,818 - INFO - __main__ - Found NPY files, prioritizing them over CSV
2025-09-15 20:10:35,818 - INFO - __main__ - Attempting to load: y.npy
2025-09-15 20:10:35,819 - INFO - __main__ - Attempting to load: X.npy
2025-09-15 20:10:36,141 - INFO - __main__ - Successfully loaded NPY data: X(62352, 1000, 2), y(62352,)
2025-09-15 20:10:36,481 - INFO - __main__ - Starting AI-enhanced data processing with new pipeline flow...
2025-09-15 20:10:36,481 - INFO - __main__ - Starting AI-enhanced training with new pipeline flow
2025-09-15 20:10:36,482 - INFO - __main__ - Flow: Template Selection → BO → Evaluation → Feedback Loop
2025-09-15 20:10:36,494 - INFO - __main__ - Data profile: {'data_type': 'numpy_array', 'shape': (62352, 1000, 2), 'dtype': 'float32', 'feature_count': 2, 'sample_count': 62352, 'is_sequence': True, 'is_image': False, 'is_tabular': False, 'has_labels': True, 'label_count': 5, 'sequence_lengths': None, 'channels': None, 'height': None, 'width': None, 'metadata': {}}
2025-09-15 20:10:36,495 - INFO - evaluation.code_generation_pipeline_orchestrator - Code generation pipeline orchestrator initialized with max 4 attempts
2025-09-15 20:10:36,495 - INFO - evaluation.code_generation_pipeline_orchestrator - Starting code generation pipeline execution
2025-09-15 20:10:36,495 - INFO - evaluation.code_generation_pipeline_orchestrator - Flow: AI Code Generation → JSON Storage → BO → Training Execution → Evaluation
2025-09-15 20:10:36,495 - INFO - evaluation.code_generation_pipeline_orchestrator - Creating centralized data splits to prevent data leakage
2025-09-15 20:10:36,496 - INFO - data_splitting - Creating centralized data splits with test_size=0.2, val_size=0.2
2025-09-15 20:10:36,496 - INFO - data_splitting - Input data shape: X=(62352, 1000, 2), y=(62352,)
2025-09-15 20:10:36,497 - INFO - data_splitting - Class distribution: [44897  9551  1201  1239  5464]
2025-09-15 20:10:37,149 - INFO - data_splitting - Computed class weights: {np.int64(0): np.float64(0.27775728256708315), np.int64(1): np.float64(1.3057591623036648), np.int64(2): np.float64(10.37815344603381), np.int64(3): np.float64(10.0640605296343), np.int64(4): np.float64(2.282184729768373)}
2025-09-15 20:10:37,150 - INFO - class_balancing - Class imbalance analysis:
2025-09-15 20:10:37,150 - INFO - class_balancing -   Strategy: severe_imbalance
2025-09-15 20:10:37,150 - INFO - class_balancing -   Imbalance ratio: 37.36
2025-09-15 20:10:37,150 - INFO - class_balancing -   Recommendations: Use weighted loss + weighted sampling, Consider Focal Loss, Evaluate with balanced metrics
2025-09-15 20:10:37,150 - INFO - data_splitting - Final splits - Train: 39904, Val: 9977, Test: 12471
2025-09-15 20:10:37,151 - INFO - data_splitting - Train class distribution: [28733  6112   769   793  3497]
2025-09-15 20:10:37,151 - INFO - data_splitting - Val class distribution: [7184 1529  192  198  874]
2025-09-15 20:10:37,152 - INFO - data_splitting - Test class distribution: [8980 1910  240  248 1093]
2025-09-15 20:10:37,152 - INFO - data_splitting - Recommended balancing strategy: severe_imbalance
2025-09-15 20:10:38,478 - INFO - data_splitting - Computed standardization stats - mean shape: torch.Size([1, 2]), std shape: torch.Size([1, 2])
2025-09-15 20:10:38,480 - INFO - evaluation.code_generation_pipeline_orchestrator - Computed standardization statistics from training data only
2025-09-15 20:10:38,483 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-15 20:10:38,483 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE ATTEMPT 1/4
2025-09-15 20:10:38,483 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-15 20:10:38,483 - INFO - evaluation.code_generation_pipeline_orchestrator - 🤖 STEP 1: AI Training Code Generation
2025-09-15 20:10:38,483 - INFO - models.ai_code_generator - Making API call to gpt-5
2025-09-15 20:10:38,483 - INFO - models.ai_code_generator - Prompt length: 1606 characters
2025-09-15 20:10:38,484 - INFO - models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-15 20:10:38,484 - INFO - models.ai_code_generator - Calling self.client.responses.create...
2025-09-15 20:10:38,484 - INFO - models.ai_code_generator - Model parameter: gpt-5
2025-09-15 20:10:38,484 - INFO - models.ai_code_generator - Input prompt preview: Generate PyTorch training function for 5-class classification.

Data: numpy_array, shape (1000, 2), 62352 samples

Dataset: MIT-BIH Arrhythmia Database
Source: https://physionet.org/content/mitdb/1.0....
2025-09-15 20:11:38,061 - INFO - httpx - HTTP Request: POST https://api.openai.com/v1/responses "HTTP/1.1 200 OK"
2025-09-15 20:11:38,208 - INFO - models.ai_code_generator - API call completed successfully
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Response type: <class 'openai.types.responses.response.Response'>
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Response attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_computed_fields__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_setattr_handlers__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__replace__', '__repr__', '__repr_args__', '__repr_name__', '__repr_recursion__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_copy_and_set_values', '_get_value', '_iter', '_request_id', '_setattr_handler', 'background', 'construct', 'conversation', 'copy', 'created_at', 'dict', 'error', 'from_orm', 'id', 'incomplete_details', 'instructions', 'json', 'max_output_tokens', 'max_tool_calls', 'metadata', 'model', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'object', 'output', 'output_text', 'parallel_tool_calls', 'parse_file', 'parse_obj', 'parse_raw', 'previous_response_id', 'prompt', 'prompt_cache_key', 'reasoning', 'safety_identifier', 'schema', 'schema_json', 'service_tier', 'status', 'temperature', 'text', 'to_dict', 'to_json', 'tool_choice', 'tools', 'top_logprobs', 'top_p', 'truncation', 'update_forward_refs', 'usage', 'user', 'validate']
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Using response.output_text
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Extracted result length: 9166 characters
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Result preview: {
    "model_name": "Light1DCNNArrhythmia",
    "training_code": "def train_model(X_train, y_train, X_val, y_val, device, **hyperparams):\n    \"\"\"\n    Train a lightweight 1D-CNN for 5-class ECG ar...
2025-09-15 20:11:38,209 - INFO - models.ai_code_generator - Successfully extracted response content
2025-09-15 20:11:38,210 - INFO - models.ai_code_generator - AI generated training function: Light1DCNNArrhythmia
2025-09-15 20:11:38,210 - INFO - models.ai_code_generator - Confidence: 0.90
2025-09-15 20:11:38,210 - INFO - models.ai_code_generator - Reasoning: For ECG arrhythmia classification on MIT-BIH, compact 1D CNNs with small kernels (3–7) and global average pooling are widely effective, capturing local morphological features and remaining parameter-efficient. The dataset is class-imbalanced; inverse-frequency class weighting stabilizes training and often improves macro performance without complicating the loop. Two input leads (shape ~[1000, 2]) are handled via Conv1d with channel-first layout and an auto-permute safeguard. The code keeps the core loop simple for Bayesian optimization, and uses pin_memory only when the tensors are on CPU as required.
2025-09-15 20:11:38,210 - INFO - evaluation.code_generation_pipeline_orchestrator - Generated training function: Light1DCNNArrhythmia
2025-09-15 20:11:38,210 - INFO - evaluation.code_generation_pipeline_orchestrator - Reasoning: For ECG arrhythmia classification on MIT-BIH, compact 1D CNNs with small kernels (3–7) and global average pooling are widely effective, capturing local morphological features and remaining parameter-efficient. The dataset is class-imbalanced; inverse-frequency class weighting stabilizes training and often improves macro performance without complicating the loop. Two input leads (shape ~[1000, 2]) are handled via Conv1d with channel-first layout and an auto-permute safeguard. The code keeps the core loop simple for Bayesian optimization, and uses pin_memory only when the tensors are on CPU as required.
2025-09-15 20:11:38,210 - INFO - evaluation.code_generation_pipeline_orchestrator - BO parameters: ['lr', 'batch_size', 'epochs', 'hidden_size', 'dropout']
2025-09-15 20:11:38,210 - INFO - evaluation.code_generation_pipeline_orchestrator - Confidence: 0.90
2025-09-15 20:11:38,210 - INFO - evaluation.code_generation_pipeline_orchestrator - 💾 STEP 2: Save Training Function to JSON
2025-09-15 20:11:38,212 - INFO - models.ai_code_generator - Training function saved to: generated_training_functions/training_function_numpy_array_Light1DCNNArrhythmia_1757967098.json
2025-09-15 20:11:38,212 - INFO - evaluation.code_generation_pipeline_orchestrator - Training function saved to: generated_training_functions/training_function_numpy_array_Light1DCNNArrhythmia_1757967098.json
2025-09-15 20:11:38,216 - INFO - models.training_function_executor - Training function validation passed
2025-09-15 20:11:38,216 - INFO - evaluation.code_generation_pipeline_orchestrator - 🔍 STEP 3: Bayesian Optimization
2025-09-15 20:11:38,216 - INFO - evaluation.code_generation_pipeline_orchestrator - Running BO for generated training function: Light1DCNNArrhythmia
2025-09-15 20:11:38,260 - INFO - evaluation.code_generation_pipeline_orchestrator - BO dataset size: 5000 samples
2025-09-15 20:11:38,261 - INFO - evaluation.code_generation_pipeline_orchestrator - BO will optimize: ['lr', 'batch_size', 'epochs', 'hidden_size', 'dropout']
2025-09-15 20:11:38,261 - INFO - models.training_function_executor - GPU available: NVIDIA H100 NVL
2025-09-15 20:11:38,261 - WARNING - models.training_function_executor - Using provided subset instead of centralized splits - this may cause data leakage
2025-09-15 20:11:38,833 - INFO - bo.run_bo - Using default search space
2025-09-15 20:11:38,836 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-15 20:11:38,844 - INFO - bo.run_bo - Using explicitly provided search space
2025-09-15 20:11:38,846 - INFO - bo.run_bo - Initialized Random Forest Bayesian Optimizer
2025-09-15 20:11:38,848 - INFO - bo.run_bo - BO Trial 1: Initial random exploration
2025-09-15 20:11:38,849 - INFO - bo.run_bo - [PROFILE] suggest() took 0.002s
2025-09-15 20:11:38,849 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:11:38,849 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:11:38,849 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': 10, 'hidden_size': 204, 'dropout': 0.41779511056254093}
2025-09-15 20:11:38,853 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.01535224694197351, 'epochs': 10, 'batch_size': 16, 'hidden_size': 204, 'dropout': 0.41779511056254093}
2025-09-15 20:12:01,757 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.5313773505687713, 1.2990147128105163, 1.2850135059356689, 1.3182576088905333, 1.19604476583004, 1.208672459125519, 1.1805244922637939, 1.143933478474617, 1.0900286364555358, 1.0405360600948335], 'train_acc': [0.4295, 0.5035, 0.49975, 0.515, 0.55725, 0.5665, 0.57425, 0.59, 0.62525, 0.63025], 'val_loss': [1.2460020155906677, 1.1892326726913451, 1.208933072090149, 1.1433111357688903, 1.205352746963501, 1.1315250263214112, 1.0855559482574464, 1.0576100935935975, 1.0072413687705994, 1.004084393978119], 'val_acc': [0.523, 0.504, 0.5, 0.555, 0.575, 0.678, 0.518, 0.736, 0.645, 0.611]}, 'best_val_acc': 0.736, 'best_epoch': 7, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.01535224694197351, 'epochs': 10, 'batch_size': 16, 'hidden_size': 204, 'dropout': 0.41779511056254093}}
2025-09-15 20:12:01,758 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 22.909s
2025-09-15 20:12:01,760 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:12:01,760 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.001s
2025-09-15 20:12:01,760 - INFO - bo.run_bo - Recorded observation #1: hparams={'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': np.int64(10), 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093}, value=0.0000
2025-09-15 20:12:01,760 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 1: {'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': np.int64(10), 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093} -> 0.0000
2025-09-15 20:12:01,763 - INFO - bo.run_bo - BO Trial 2: Initial random exploration
2025-09-15 20:12:01,763 - INFO - bo.run_bo - [PROFILE] suggest() took 0.003s
2025-09-15 20:12:01,764 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:12:01,764 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:12:01,764 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.0006071989493441302, 'batch_size': 8, 'epochs': 13, 'hidden_size': 103, 'dropout': 0.2335960277973153}
2025-09-15 20:12:01,768 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0006071989493441302, 'epochs': 13, 'batch_size': 8, 'hidden_size': 103, 'dropout': 0.2335960277973153}
2025-09-15 20:12:49,137 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.2718782454133033, 1.1551622179746628, 1.0682446651458741, 0.9885595082640648, 0.8809399861991406, 0.8247701326906681, 0.746049288675189, 0.6682682535499335, 0.6075859927982092, 0.5984326189905405, 0.5492663329392672, 0.5431763177365064, 0.5007067644447089], 'train_acc': [0.62125, 0.67675, 0.69875, 0.728, 0.78125, 0.80325, 0.8295, 0.8435, 0.863, 0.8665, 0.879, 0.88825, 0.89], 'val_loss': [1.1383797080516815, 1.0710324428081512, 0.9408926963806152, 1.0902255148887634, 0.7626429011821747, 0.6644388189911843, 0.6109158129692077, 0.5422925241589546, 0.5289518967866897, 0.6218272247314454, 0.4534127771556377, 0.45876475077867507, 0.3923963418602943], 'val_acc': [0.723, 0.678, 0.757, 0.71, 0.815, 0.834, 0.889, 0.898, 0.888, 0.729, 0.861, 0.875, 0.935]}, 'best_val_acc': 0.935, 'best_epoch': 12, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.0006071989493441302, 'epochs': 13, 'batch_size': 8, 'hidden_size': 103, 'dropout': 0.2335960277973153}}
2025-09-15 20:12:49,138 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 47.374s
2025-09-15 20:12:49,139 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:12:49,139 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.001s
2025-09-15 20:12:49,139 - INFO - bo.run_bo - Recorded observation #2: hparams={'lr': 0.0006071989493441302, 'batch_size': 8, 'epochs': np.int64(13), 'hidden_size': np.int64(103), 'dropout': 0.2335960277973153}, value=0.0000
2025-09-15 20:12:49,140 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 2: {'lr': 0.0006071989493441302, 'batch_size': 8, 'epochs': np.int64(13), 'hidden_size': np.int64(103), 'dropout': 0.2335960277973153} -> 0.0000
2025-09-15 20:12:49,142 - INFO - bo.run_bo - BO Trial 3: Initial random exploration
2025-09-15 20:12:49,143 - INFO - bo.run_bo - [PROFILE] suggest() took 0.003s
2025-09-15 20:12:49,143 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:12:49,143 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:12:49,143 - INFO - models.training_function_executor - Hyperparameters: {'lr': 3.727925903376984e-05, 'batch_size': 64, 'epochs': 23, 'hidden_size': 273, 'dropout': 0.5053991405867774}
2025-09-15 20:12:49,147 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 3.727925903376984e-05, 'epochs': 23, 'batch_size': 64, 'hidden_size': 273, 'dropout': 0.5053991405867774}
2025-09-15 20:13:01,691 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.5808169050216674, 1.501275936126709, 1.4417880210876466, 1.3969473466873168, 1.3782684059143067, 1.3349138059616088, 1.3113771629333497, 1.3077055530548096, 1.257299750328064, 1.2638016023635865, 1.2539909801483153, 1.237128137588501, 1.231432499885559, 1.2158420648574828, 1.1931648378372193, 1.2036797428131103, 1.1950269632339479, 1.1955698261260985, 1.1673104276657105, 1.1771562395095825, 1.1450205879211426, 1.1520847115516664, 1.1439695816040039], 'train_acc': [0.236, 0.30325, 0.354, 0.36, 0.3715, 0.39925, 0.3975, 0.408, 0.41375, 0.4045, 0.415, 0.4345, 0.42725, 0.4395, 0.44275, 0.43825, 0.45075, 0.43125, 0.444, 0.45275, 0.45725, 0.4565, 0.4575], 'val_loss': [1.4838113355636597, 1.422305643081665, 1.3797294940948486, 1.3454558353424073, 1.3164775581359864, 1.3000446071624756, 1.2796547594070435, 1.265984341621399, 1.2521920309066772, 1.2411077451705932, 1.2279902000427245, 1.2252386531829833, 1.2146912422180176, 1.198022011756897, 1.1887036609649657, 1.1862489280700683, 1.1796063137054444, 1.1715177040100098, 1.158780101776123, 1.1577377109527587, 1.1609951219558716, 1.1480509414672853, 1.1363187255859375], 'val_acc': [0.273, 0.413, 0.431, 0.386, 0.428, 0.434, 0.469, 0.43, 0.455, 0.45, 0.434, 0.463, 0.445, 0.461, 0.466, 0.461, 0.477, 0.464, 0.461, 0.444, 0.466, 0.486, 0.484]}, 'best_val_acc': 0.486, 'best_epoch': 21, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 3.727925903376984e-05, 'epochs': 23, 'batch_size': 64, 'hidden_size': 273, 'dropout': 0.5053991405867774}}
2025-09-15 20:13:01,692 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 12.549s
2025-09-15 20:13:02,097 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:13:02,097 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.405s
2025-09-15 20:13:02,097 - INFO - bo.run_bo - Recorded observation #3: hparams={'lr': 3.727925903376984e-05, 'batch_size': 64, 'epochs': np.int64(23), 'hidden_size': np.int64(273), 'dropout': 0.5053991405867774}, value=0.0000
2025-09-15 20:13:02,097 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 3: {'lr': 3.727925903376984e-05, 'batch_size': 64, 'epochs': np.int64(23), 'hidden_size': np.int64(273), 'dropout': 0.5053991405867774} -> 0.0000
2025-09-15 20:13:02,098 - INFO - bo.run_bo - BO Trial 4: Using RF surrogate + Expected Improvement
2025-09-15 20:13:02,098 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:13:02,098 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:13:02,098 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:13:02,098 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.05678201970293135, 'batch_size': 32, 'epochs': 5, 'hidden_size': 183, 'dropout': 0.08439771317838103}
2025-09-15 20:13:02,102 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.05678201970293135, 'epochs': 5, 'batch_size': 32, 'hidden_size': 183, 'dropout': 0.08439771317838103}
2025-09-15 20:13:06,906 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.588483120918274, 1.4163232021331786, 1.4119423561096192, 1.3347832970619202, 1.3437287893295289], 'train_acc': [0.37575, 0.39575, 0.342, 0.3725, 0.4065], 'val_loss': [1.415048933029175, 1.457397936820984, 1.3001774206161498, 1.6166272754669189, 1.380421582221985], 'val_acc': [0.356, 0.365, 0.515, 0.241, 0.252]}, 'best_val_acc': 0.515, 'best_epoch': 2, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.05678201970293135, 'epochs': 5, 'batch_size': 32, 'hidden_size': 183, 'dropout': 0.08439771317838103}}
2025-09-15 20:13:06,906 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 4.808s
2025-09-15 20:13:07,298 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:13:07,298 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.392s
2025-09-15 20:13:07,298 - INFO - bo.run_bo - Recorded observation #4: hparams={'lr': 0.05678201970293135, 'batch_size': np.int64(32), 'epochs': np.int64(5), 'hidden_size': np.int64(183), 'dropout': 0.08439771317838103}, value=0.0000
2025-09-15 20:13:07,299 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 4: {'lr': 0.05678201970293135, 'batch_size': np.int64(32), 'epochs': np.int64(5), 'hidden_size': np.int64(183), 'dropout': 0.08439771317838103} -> 0.0000
2025-09-15 20:13:07,299 - INFO - bo.run_bo - BO Trial 5: Using RF surrogate + Expected Improvement
2025-09-15 20:13:07,299 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:13:07,299 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:13:07,299 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:13:07,299 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.0006550049531232524, 'batch_size': 256, 'epochs': 6, 'hidden_size': 373, 'dropout': 0.4568590869235105}
2025-09-15 20:13:07,303 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0006550049531232524, 'epochs': 6, 'batch_size': 256, 'hidden_size': 373, 'dropout': 0.4568590869235105}
2025-09-15 20:13:08,505 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.399710729598999, 1.2354832906723023, 1.1649258728027343, 1.136505319595337, 1.079550579071045, 1.0449992275238038], 'train_acc': [0.24975, 0.4215, 0.389, 0.4425, 0.4265, 0.465], 'val_loss': [1.4400075025558472, 1.2372575073242187, 1.1593634004592897, 1.1521252965927125, 1.0755419111251832, 1.0478671979904175], 'val_acc': [0.378, 0.44, 0.456, 0.469, 0.483, 0.448]}, 'best_val_acc': 0.483, 'best_epoch': 4, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.0006550049531232524, 'epochs': 6, 'batch_size': 256, 'hidden_size': 373, 'dropout': 0.4568590869235105}}
2025-09-15 20:13:08,505 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 1.206s
2025-09-15 20:13:08,895 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:13:08,895 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.389s
2025-09-15 20:13:08,895 - INFO - bo.run_bo - Recorded observation #5: hparams={'lr': 0.0006550049531232524, 'batch_size': np.int64(256), 'epochs': np.int64(6), 'hidden_size': np.int64(373), 'dropout': 0.4568590869235105}, value=0.0000
2025-09-15 20:13:08,895 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 5: {'lr': 0.0006550049531232524, 'batch_size': np.int64(256), 'epochs': np.int64(6), 'hidden_size': np.int64(373), 'dropout': 0.4568590869235105} -> 0.0000
2025-09-15 20:13:08,895 - INFO - bo.run_bo - BO Trial 6: Using RF surrogate + Expected Improvement
2025-09-15 20:13:08,896 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:13:08,896 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:13:08,896 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:13:08,896 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.0006302883671688219, 'batch_size': 128, 'epochs': 24, 'hidden_size': 432, 'dropout': 0.24572406269266053}
2025-09-15 20:13:08,899 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0006302883671688219, 'epochs': 24, 'batch_size': 128, 'hidden_size': 432, 'dropout': 0.24572406269266053}
2025-09-15 20:13:15,792 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.351591414451599, 1.1595438013076782, 1.0978268938064575, 1.0388745794296264, 1.0028967533111572, 0.9802885866165161, 0.9366498184204102, 0.9325110960006714, 0.871360767364502, 0.8406460580825805, 0.7892491846084595, 0.7480411853790283, 0.7131930017471313, 0.6878525495529175, 0.6943387537002563, 0.7257620511054993, 0.6674078350067139, 0.6171706595420837, 0.5794380605220795, 0.6014326195716858, 0.5863271491527557, 0.5310641841888428, 0.531711196899414, 0.4895858492851257], 'train_acc': [0.3475, 0.44425, 0.461, 0.49075, 0.48825, 0.518, 0.54825, 0.573, 0.60825, 0.62725, 0.65225, 0.69075, 0.71175, 0.72125, 0.73575, 0.737, 0.7745, 0.76075, 0.782, 0.80075, 0.77375, 0.80575, 0.78025, 0.83175], 'val_loss': [1.265955638885498, 1.1170735883712768, 1.0833774585723877, 1.0388421430587769, 1.0353591957092285, 1.015948122024536, 0.9812722473144532, 0.9059824328422547, 0.8790809111595154, 0.8448406505584717, 0.8118235993385315, 0.7569705414772033, 0.7628179445266724, 0.7359247465133667, 0.8130882349014282, 0.7492686047554016, 0.640689263343811, 0.6493068375587463, 0.5916209392547608, 0.6843169221878052, 0.5803439517021179, 0.5182635035514832, 0.5239629426002502, 0.5761611938476563], 'val_acc': [0.491, 0.472, 0.495, 0.539, 0.404, 0.576, 0.491, 0.552, 0.59, 0.705, 0.612, 0.568, 0.748, 0.678, 0.647, 0.751, 0.688, 0.699, 0.728, 0.587, 0.794, 0.728, 0.731, 0.721]}, 'best_val_acc': 0.794, 'best_epoch': 20, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.0006302883671688219, 'epochs': 24, 'batch_size': 128, 'hidden_size': 432, 'dropout': 0.24572406269266053}}
2025-09-15 20:13:15,793 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 6.897s
2025-09-15 20:13:16,187 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:13:16,187 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.394s
2025-09-15 20:13:16,187 - INFO - bo.run_bo - Recorded observation #6: hparams={'lr': 0.0006302883671688219, 'batch_size': np.int64(128), 'epochs': np.int64(24), 'hidden_size': np.int64(432), 'dropout': 0.24572406269266053}, value=0.0000
2025-09-15 20:13:16,188 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 6: {'lr': 0.0006302883671688219, 'batch_size': np.int64(128), 'epochs': np.int64(24), 'hidden_size': np.int64(432), 'dropout': 0.24572406269266053} -> 0.0000
2025-09-15 20:13:16,188 - INFO - bo.run_bo - BO Trial 7: Using RF surrogate + Expected Improvement
2025-09-15 20:13:16,188 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:13:16,188 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:13:16,188 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:13:16,188 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.04222247265603969, 'batch_size': 16, 'epochs': 18, 'hidden_size': 51, 'dropout': 0.25007875594551915}
2025-09-15 20:13:16,192 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.04222247265603969, 'epochs': 18, 'batch_size': 16, 'hidden_size': 51, 'dropout': 0.25007875594551915}
2025-09-15 20:13:47,676 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.4657667508125305, 1.3833883564472198, 1.3369125182628632, 1.3346810891628265, 1.3665212523937225, 1.3206837477684021, 1.3346950149536132, 1.340967507123947, 1.3315802099704743, 1.397702820301056, 1.3976595847606659, 1.4026174793243409, 1.4004289503097533, 1.4213219695091248, 1.4257564585208893, 1.4271236596107484, 1.363039763212204, 1.4055833063125611], 'train_acc': [0.42225, 0.46875, 0.48825, 0.45825, 0.416, 0.47875, 0.43425, 0.39, 0.38975, 0.336, 0.41575, 0.3905, 0.4805, 0.30725, 0.4445, 0.395, 0.351, 0.43825], 'val_loss': [1.3476426010131837, 1.3393468976020813, 1.4568882818222046, 1.285878282546997, 1.2267453112602233, 1.244093062400818, 1.3343835077285766, 1.342400951385498, 1.2970819692611695, 1.3655235681533813, 1.3215926485061646, 1.330606304168701, 1.3255756492614745, 1.307089178085327, 1.4760901947021485, 1.3412234392166138, 1.3373628692626953, 1.3415297899246217], 'val_acc': [0.504, 0.445, 0.547, 0.191, 0.583, 0.611, 0.345, 0.492, 0.206, 0.429, 0.659, 0.571, 0.184, 0.618, 0.232, 0.438, 0.548, 0.355]}, 'best_val_acc': 0.659, 'best_epoch': 10, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.04222247265603969, 'epochs': 18, 'batch_size': 16, 'hidden_size': 51, 'dropout': 0.25007875594551915}}
2025-09-15 20:13:47,677 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 31.489s
2025-09-15 20:13:48,076 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:13:48,076 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.399s
2025-09-15 20:13:48,077 - INFO - bo.run_bo - Recorded observation #7: hparams={'lr': 0.04222247265603969, 'batch_size': np.int64(16), 'epochs': np.int64(18), 'hidden_size': np.int64(51), 'dropout': 0.25007875594551915}, value=0.0000
2025-09-15 20:13:48,077 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 7: {'lr': 0.04222247265603969, 'batch_size': np.int64(16), 'epochs': np.int64(18), 'hidden_size': np.int64(51), 'dropout': 0.25007875594551915} -> 0.0000
2025-09-15 20:13:48,077 - INFO - bo.run_bo - BO Trial 8: Using RF surrogate + Expected Improvement
2025-09-15 20:13:48,077 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:13:48,077 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:13:48,078 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:13:48,078 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.015831723490615644, 'batch_size': 32, 'epochs': 12, 'hidden_size': 319, 'dropout': 0.2621266723153076}
2025-09-15 20:13:48,082 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.015831723490615644, 'epochs': 12, 'batch_size': 32, 'hidden_size': 319, 'dropout': 0.2621266723153076}
2025-09-15 20:13:59,924 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.5880927791595458, 1.3559573435783385, 1.2637200322151183, 1.2876046962738037, 1.2594583110809325, 1.1925854525566102, 1.1876654286384583, 1.1383210034370423, 1.1347287573814393, 1.1189994077682495, 1.0753885986804963, 0.9401370377540589], 'train_acc': [0.38325, 0.3935, 0.4185, 0.4425, 0.485, 0.489, 0.5025, 0.496, 0.5135, 0.56975, 0.59, 0.6375], 'val_loss': [1.5126959619522096, 1.1640016293525697, 1.196416940689087, 1.2931716928482055, 1.1578050050735473, 1.145896816253662, 1.184988084793091, 1.136853166103363, 1.1476677722930908, 1.042296411037445, 0.9222049918174744, 1.0256522164344788], 'val_acc': [0.55, 0.435, 0.464, 0.437, 0.513, 0.547, 0.604, 0.493, 0.71, 0.609, 0.623, 0.416]}, 'best_val_acc': 0.71, 'best_epoch': 8, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.015831723490615644, 'epochs': 12, 'batch_size': 32, 'hidden_size': 319, 'dropout': 0.2621266723153076}}
2025-09-15 20:13:59,924 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 11.847s
2025-09-15 20:14:00,314 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:14:00,315 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.390s
2025-09-15 20:14:00,315 - INFO - bo.run_bo - Recorded observation #8: hparams={'lr': 0.015831723490615644, 'batch_size': np.int64(32), 'epochs': np.int64(12), 'hidden_size': np.int64(319), 'dropout': 0.2621266723153076}, value=0.0000
2025-09-15 20:14:00,315 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 8: {'lr': 0.015831723490615644, 'batch_size': np.int64(32), 'epochs': np.int64(12), 'hidden_size': np.int64(319), 'dropout': 0.2621266723153076} -> 0.0000
2025-09-15 20:14:00,315 - INFO - bo.run_bo - BO Trial 9: Using RF surrogate + Expected Improvement
2025-09-15 20:14:00,315 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:14:00,316 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:14:00,316 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:14:00,316 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.0004582655140915009, 'batch_size': 8, 'epochs': 22, 'hidden_size': 288, 'dropout': 0.2979985056070939}
2025-09-15 20:14:00,319 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0004582655140915009, 'epochs': 22, 'batch_size': 8, 'hidden_size': 288, 'dropout': 0.2979985056070939}
2025-09-15 20:15:22,238 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.2576959261894225, 1.1324744789004326, 1.0166295388936997, 0.9618735349178315, 0.8474371129274368, 0.7941408311277628, 0.7292638935893774, 0.6738392657786608, 0.6511841703802347, 0.6022940257787704, 0.5679807195067406, 0.5548730828911066, 0.4969925818219781, 0.4776461105123162, 0.4846385558247566, 0.45598723930120466, 0.44744209945201874, 0.4518909057825804, 0.4318175551556051, 0.4124860185682774, 0.41080077828839423, 0.3982759890332818], 'train_acc': [0.5935, 0.66475, 0.698, 0.7465, 0.77625, 0.8175, 0.822, 0.8465, 0.853, 0.86925, 0.87225, 0.8815, 0.88275, 0.885, 0.879, 0.891, 0.8965, 0.89425, 0.89225, 0.899, 0.90225, 0.893], 'val_loss': [1.1003575341701508, 1.03743110871315, 0.8888650537729264, 0.8214132758378982, 0.6763889290094376, 0.6357108126878739, 0.6226894938349724, 0.5584111012220383, 0.516128611177206, 0.4741676058024168, 0.4916747474968433, 0.5313332296013832, 0.5260934540629387, 0.4108521983921528, 0.43806507787853477, 0.4090497477948666, 0.3837560382336378, 0.3766582503914833, 0.3244763166755438, 0.3294803908318281, 0.5524207258820534, 0.32789126386493445], 'val_acc': [0.679, 0.66, 0.722, 0.733, 0.864, 0.878, 0.871, 0.912, 0.887, 0.881, 0.877, 0.883, 0.837, 0.916, 0.922, 0.894, 0.891, 0.928, 0.933, 0.931, 0.757, 0.904]}, 'best_val_acc': 0.933, 'best_epoch': 18, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.0004582655140915009, 'epochs': 22, 'batch_size': 8, 'hidden_size': 288, 'dropout': 0.2979985056070939}}
2025-09-15 20:15:22,239 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 81.923s
2025-09-15 20:15:22,634 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:15:22,635 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.395s
2025-09-15 20:15:22,635 - INFO - bo.run_bo - Recorded observation #9: hparams={'lr': 0.0004582655140915009, 'batch_size': np.int64(8), 'epochs': np.int64(22), 'hidden_size': np.int64(288), 'dropout': 0.2979985056070939}, value=0.0000
2025-09-15 20:15:22,635 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 9: {'lr': 0.0004582655140915009, 'batch_size': np.int64(8), 'epochs': np.int64(22), 'hidden_size': np.int64(288), 'dropout': 0.2979985056070939} -> 0.0000
2025-09-15 20:15:22,636 - INFO - bo.run_bo - BO Trial 10: Using RF surrogate + Expected Improvement
2025-09-15 20:15:22,636 - INFO - bo.run_bo - [PROFILE] suggest() took 0.000s
2025-09-15 20:15:22,636 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:15:22,636 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:15:22,636 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.0019299580918507716, 'batch_size': 16, 'epochs': 25, 'hidden_size': 367, 'dropout': 0.5945242340829255}
2025-09-15 20:15:22,640 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.0019299580918507716, 'epochs': 25, 'batch_size': 16, 'hidden_size': 367, 'dropout': 0.5945242340829255}
2025-09-15 20:16:10,762 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.4101102371215821, 1.2399511641263963, 1.2430394029617309, 1.199150168657303, 1.1887372243404388, 1.1167702647447586, 1.0586348376274108, 0.9853647691011429, 0.8614204213619232, 0.7425136936306953, 0.7536043880581855, 0.6279332137107849, 0.629370690703392, 0.5782117081582546, 0.5287888111621142, 0.567037910014391, 0.530264928996563, 0.4752953323721886, 0.49095292887091635, 0.47933715730905535, 0.4399449583292007, 0.42000437986850736, 0.4893159468173981, 0.4497377016991377, 0.4254227372407913], 'train_acc': [0.48275, 0.516, 0.52375, 0.542, 0.5565, 0.59075, 0.61925, 0.67525, 0.7115, 0.78025, 0.7875, 0.8045, 0.82875, 0.83, 0.8295, 0.819, 0.8155, 0.84975, 0.84475, 0.8455, 0.8525, 0.85525, 0.84725, 0.8525, 0.86075], 'val_loss': [1.2409829034805298, 1.240335220336914, 1.1109952535629273, 1.0587937865257264, 1.1073385858535767, 1.0492058482170106, 1.0197576484680175, 0.7710618724822998, 0.6845877292156219, 0.6738633892536163, 0.7234360712766648, 0.4813910486698151, 0.4380394880771637, 0.41471639192104337, 0.41744937789440156, 0.5785732254981995, 0.4059715756773949, 0.41616830706596375, 0.3794585648179054, 0.33187726241350174, 0.4101305591464043, 0.347013252556324, 0.331483660697937, 0.3119079945087433, 0.4580871868133545], 'val_acc': [0.539, 0.517, 0.517, 0.496, 0.563, 0.509, 0.647, 0.783, 0.844, 0.815, 0.779, 0.882, 0.877, 0.819, 0.838, 0.801, 0.816, 0.812, 0.915, 0.914, 0.875, 0.877, 0.928, 0.907, 0.887]}, 'best_val_acc': 0.928, 'best_epoch': 22, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.0019299580918507716, 'epochs': 25, 'batch_size': 16, 'hidden_size': 367, 'dropout': 0.5945242340829255}}
2025-09-15 20:16:10,763 - INFO - models.training_function_executor - [PROFILE] objective(train+eval) took 48.127s
2025-09-15 20:16:11,162 - INFO - bo.run_bo - Updated RF surrogate model with observation: 0.0000
2025-09-15 20:16:11,162 - INFO - bo.run_bo - [PROFILE] observe()->tell took 0.399s
2025-09-15 20:16:11,162 - INFO - bo.run_bo - Recorded observation #10: hparams={'lr': 0.0019299580918507716, 'batch_size': np.int64(16), 'epochs': np.int64(25), 'hidden_size': np.int64(367), 'dropout': 0.5945242340829255}, value=0.0000
2025-09-15 20:16:11,163 - INFO - evaluation.code_generation_pipeline_orchestrator - BO Trial 10: {'lr': 0.0019299580918507716, 'batch_size': np.int64(16), 'epochs': np.int64(25), 'hidden_size': np.int64(367), 'dropout': 0.5945242340829255} -> 0.0000
2025-09-15 20:16:11,163 - INFO - evaluation.code_generation_pipeline_orchestrator - BO completed - Best score: 0.0000
2025-09-15 20:16:11,163 - INFO - evaluation.code_generation_pipeline_orchestrator - Best params: {'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': np.int64(10), 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093}
2025-09-15 20:16:11,164 - INFO - visualization - Generating BO visualization charts with 10 trials...
2025-09-15 20:16:20,335 - INFO - visualization - BO summary saved to: charts/BO_Light1DCNNArrhythmia_20250915_201611/bo_summary.txt
2025-09-15 20:16:20,335 - INFO - visualization - BO charts saved to: charts/BO_Light1DCNNArrhythmia_20250915_201611
2025-09-15 20:16:20,336 - INFO - evaluation.code_generation_pipeline_orchestrator - 📊 BO charts saved to: charts/BO_Light1DCNNArrhythmia_20250915_201611
2025-09-15 20:16:20,336 - INFO - evaluation.code_generation_pipeline_orchestrator - 🚀 STEP 4: Final Training Execution
2025-09-15 20:16:20,336 - INFO - evaluation.code_generation_pipeline_orchestrator - Using centralized splits - Train: (39904, 1000, 2), Val: (9977, 1000, 2), Test: (12471, 1000, 2)
2025-09-15 20:16:20,640 - INFO - models.training_function_executor - Loaded training function: Light1DCNNArrhythmia
2025-09-15 20:16:20,641 - INFO - models.training_function_executor - Reasoning: For ECG arrhythmia classification on MIT-BIH, compact 1D CNNs with small kernels (3–7) and global average pooling are widely effective, capturing local morphological features and remaining parameter-efficient. The dataset is class-imbalanced; inverse-frequency class weighting stabilizes training and often improves macro performance without complicating the loop. Two input leads (shape ~[1000, 2]) are handled via Conv1d with channel-first layout and an auto-permute safeguard. The code keeps the core loop simple for Bayesian optimization, and uses pin_memory only when the tensors are on CPU as required.
2025-09-15 20:16:20,641 - INFO - evaluation.code_generation_pipeline_orchestrator - Executing final training with optimized params: {'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': np.int64(10), 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093}
2025-09-15 20:16:20,641 - INFO - models.training_function_executor - Using device: cuda
2025-09-15 20:16:20,728 - INFO - models.training_function_executor - Executing training function: Light1DCNNArrhythmia
2025-09-15 20:16:20,728 - INFO - models.training_function_executor - Hyperparameters: {'lr': 0.01535224694197351, 'batch_size': 16, 'epochs': np.int64(10), 'hidden_size': np.int64(204), 'dropout': 0.41779511056254093}
2025-09-15 20:16:20,732 - INFO - models.training_function_executor - Starting training with hyperparameters: {'lr': 0.01535224694197351, 'epochs': 10, 'batch_size': 16, 'hidden_size': 204, 'dropout': 0.41779511056254093}
2025-09-15 20:19:19,238 - INFO - models.training_function_executor - Training completed successfully: {'history': {'train_loss': [1.2735560345071357, 0.9499852598675413, 0.6798274634344729, 0.621278021986497, 0.5863612512307302, 0.5503231550954467, 0.5139445390181845, 0.518767846642927, 0.4937002518809525, 0.4699760942197828], 'train_acc': [0.4980954290296712, 0.6613873295910184, 0.765161387329591, 0.7979400561347233, 0.8122493985565357, 0.8286136728147554, 0.844276263031275, 0.8465567361668003, 0.851593825180433, 0.8599639133921412], 'val_loss': [1.148849346373188, 0.7333073889975009, 0.6126946292289622, 0.5629120164737441, 0.47419826274012783, 0.4578188310017074, 0.44372794215056893, 0.9910050849165625, 0.44604996853103207, 0.4793114972649852], 'val_acc': [0.6430790818883432, 0.8180815876515987, 0.8195850456048912, 0.793926029868698, 0.8456449834619625, 0.9099929838628846, 0.8849353513080084, 0.8737095319234238, 0.9005713140222512, 0.855066653302596]}, 'best_val_acc': 0.9099929838628846, 'best_epoch': 5, 'model_name': 'Light1DCNNArrhythmia', 'training_function_source': 'ai_generated', 'hyperparameters_used': {'lr': 0.01535224694197351, 'epochs': 10, 'batch_size': 16, 'hidden_size': 204, 'dropout': 0.41779511056254093}}
2025-09-15 20:19:19,967 - INFO - evaluation.code_generation_pipeline_orchestrator - Final test metrics: {'acc': 0.8548632828161334, 'macro_f1': 0.7034777440052327}
2025-09-15 20:19:19,967 - ERROR - evaluation.code_generation_pipeline_orchestrator - Pipeline attempt 1 failed: name 'X_train' is not defined
2025-09-15 20:19:20,016 - INFO - evaluation.code_generation_pipeline_orchestrator - 
============================================================
2025-09-15 20:19:20,017 - INFO - evaluation.code_generation_pipeline_orchestrator - PIPELINE ATTEMPT 2/4
2025-09-15 20:19:20,017 - INFO - evaluation.code_generation_pipeline_orchestrator - ============================================================
2025-09-15 20:19:20,017 - INFO - evaluation.code_generation_pipeline_orchestrator - 🤖 STEP 1: AI Training Code Generation
2025-09-15 20:19:20,017 - INFO - models.ai_code_generator - Making API call to gpt-5
2025-09-15 20:19:20,017 - INFO - models.ai_code_generator - Prompt length: 1606 characters
2025-09-15 20:19:20,017 - INFO - models.ai_code_generator - Using API base URL: https://api.openai.com/v1
2025-09-15 20:19:20,018 - INFO - models.ai_code_generator - Calling self.client.responses.create...
2025-09-15 20:19:20,018 - INFO - models.ai_code_generator - Model parameter: gpt-5
2025-09-15 20:19:20,018 - INFO - models.ai_code_generator - Input prompt preview: Generate PyTorch training function for 5-class classification.

Data: numpy_array, shape (1000, 2), 62352 samples

Dataset: MIT-BIH Arrhythmia Database
Source: https://physionet.org/content/mitdb/1.0....
